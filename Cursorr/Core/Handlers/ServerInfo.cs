using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace Cursorr.Core.Handlers
{
    public class ServerInfo {
        public String mServerInfo { get; set; }
        public String mAddress { get; set; }
        public int mVersion { get; set; }
        public bool mStopFlag { get; set; }

        /**
         * Constructor.
         *
         * Initializes the <code>ServerInfo</code>.
         *
         * @param publicKey public key of the server generated by
         *                  {@link project.pc.security.EKEProvider#getBase64EncodedPubKey()}.
         * @param serverInfo canonical hostname of the server.
         * @see project.pc.security.EKEProvider#getBase64EncodedPubKey()
         */
        public ServerInfo(String serverInfo, int version) {
            mVersion = version;
            mServerInfo = serverInfo;
            mStopFlag = false;
        }

        /**
         * Compares two <code>ServerInfo</code> objects.
         *
         * @param obj the object to be compared.
         * @return <code>true</code>, if the two objects are equal, <br/>
         *         <code>false</code>, otherwise.
         */
  
        public bool equals(Object obj) {
            if (this == obj) return true;
            if (obj == null) return false;
            if (this.GetType() != obj.GetType()) return false;
            ServerInfo other = (ServerInfo)obj;
            return mAddress.Equals(other.mAddress);
        }

        void setServerAddress(String address) { mAddress = address; }

        /**
         * Sets the status of the <i>broadcast</i> as <i>inactive</i>.
         */
        void setStopFlag() { mStopFlag = true; }

        /**
         * Sets the status of the <i>broadcast</i> as <i>active</i>.
         */
        void clearStopFlag() { mStopFlag = false; }

        public bool getStopFlag() { return mStopFlag; }
        public String getServerInfo() { return mServerInfo; }
        public String getAddress() { return mAddress; }
    }
}